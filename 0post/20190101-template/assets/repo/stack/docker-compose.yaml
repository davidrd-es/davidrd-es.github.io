#Vars:{container-port}}
## {{container-name}}
## {{container-image}}
## {{container-port}}
## {{container-port-external}}
## {{traefik-type}}: http/tcp/udp
## {{traefik-entrypoint}}: web/websecure/custom
## {{domain}}

#Synology Paths 
## /volume1/labapps/{{stack-name}}/{{container-name}}/config


version: '3.6'
services:
  {{container-name}}:
    image: {{container-image}}
    restart: unless-stopped
    hostname: '{{container-name}}.{{domain}}'
    container_name: {{container-name}}
    depends_on:
      - postgres
    user: "1029:100"
    #privileged: true
    cap_add:
      - IPC_LOCK
    environment:
      - "ENV_VALUE1=value1"
    command: 
      - '--path.procfs=/host/proc' 
    volumes:
      - {{synology-folder}}/{{container-name}}/{{folder-path}}:{{containerfolder-Z}}
      - {{container-name}}-{{docker-volume1}}:{{containerfolder-A}}
      - {{container-name}}-{{docker-volume2}}:{{containerfolder-B}}
      - {{container-name}}-{{docker-volume3}}:{{containerfolder-C}}
      - {{container-name}}-{{docker-volume2}}:{{containerfolder-D}}
    expose:
      - {{container-port}}/tcp
    ports:
      - {{container-port-external}}:{{container-port}}
    networks:
      default:
        ipv4_address: 172.20.0.250
    dns:
      - 172.30.0.3
    labels:
    ### traefik Base Config
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"  
    ### http Web Example
      - "traefik.http.routers.{{container-name}}.entrypoints=web"
      - "traefik.http.routers.{{container-name}}.rule=Host(`{{container-name}}.{{domain}}`)"
      - "traefik.http.routers.{{container-name}}.service={{container-name}}"
      - "traefik.http.routers.{{container-name}}.middlewares=default-http@file"
      - "traefik.http.services.{{container-name}}.loadbalancer.server.port={{container-port}}"
    ### https Web Example
      - "traefik.http.routers.{{container-name}}.entrypoints=websecure"
      - "traefik.http.routers.{{container-name}}.rule=Host(`{{container-name}}.{{domain}}`)"
      - "traefik.http.routers.{{container-name}}.service={{container-name}}"
      - "traefik.http.routers.{{container-name}}.middlewares=default-http@file"
      - "traefik.http.routers.{{container-name}}.tls=true"
      - "traefik.http.services.{{container-name}}.loadbalancer.server.port={{container-port}}"
    ### tcp passthrough Example
      - "traefik.tcp.routers.{{container-name}}.entrypoints=web"
      - "traefik.tcp.routers.{{container-name}}.rule=HostSNI(`{{container-name}}.{{domain}}`)"
      - "traefik.tcp.routers.{{container-name}}.service=slsk"
      - "traefik.tcp.routers.{{container-name}}.tls.passthrough=true"
      - "traefik.tcp.services.slsk.loadbalancer.server.port={{container-port}}"
    logging:
      driver: "json-file"
    #healthcheck: 
    #  test: wget --no-verbose --tries=1 --spider http://localhost:8200 || exit 1
    #  interval: 10s
    #  retries: 12
    #  start_period: 10s
    #  timeout: 10s
networks:
  default: 
    external: true
    name: proxy
volumes:
  {{container-name}}-{{docker-volume1}}:
  {{container-name}}-{{docker-volume2}}:
  {{container-name}}-{{docker-volume3}}:
  {{container-name}}-{{docker-volume2}}:
secrets:
  db_password:
    file: ./secrets/db_password.txt
  db_root_password:
    file: ./secrets/db_root_password.txt